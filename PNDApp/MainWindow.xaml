<Window x:Class="PNDApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:PNDApp.ViewModels"
        WindowStartupLocation="CenterScreen" mc:Ignorable="d"
        Title="Petri Net Editor" WindowStyle="ThreeDBorderWindow" x:Name="View" 
        HorizontalContentAlignment="Stretch" SizeChanged="MainWindow_OnSizeChanged"
        VerticalContentAlignment="Stretch" PreviewKeyDown="MainWindow_OnPreviewKeyDown">
    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>

    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- The main menu of the application -->
        <Menu IsMainMenu="True" Grid.Row="0" Background="#FFF0F0F0">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Click="BtnNewFile_OnClick" InputGestureText="Ctrl-N">
                    <MenuItem.Icon>
                        <Image Source="Images/new.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open" Click="BtnOpenFile_OnClick" InputGestureText="Ctrl-O">
                    <MenuItem.Icon>
                        <Image Source="Images/open.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Save" Click="BtnSaveFile_OnClick" InputGestureText="Ctrl-S">
                    <MenuItem.Icon>
                        <Image Source="Images/save.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="S_ave As..." Click="BtnSaveFileAs_OnClick" InputGestureText="Ctrl-Shift-S">
                </MenuItem>
                <Separator />
                <MenuItem Header="_Export..." Click="BtnExport_OnClick" InputGestureText="Ctrl-E">
                    <MenuItem.Icon>
                        <Image Source="Images/export.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Quit" x:Name="QuitItem" Click="BtnQuit_OnClick" InputGestureText="Ctrl-Q">
                    <MenuItem.Icon>
                        <Image Source="Images/quit.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Centralize" Click="Centralize_OnClick"/>
                <MenuItem Header="_Auto Layout" Click="AutoLayout_OnClick"/>
                <Separator />
                <MenuItem Header="Grid" IsCheckable="True" IsChecked="{Binding IsGrid, Mode=TwoWay}" />
                <Separator />
                <MenuItem Header="_Log" IsCheckable="True" 
                          Checked="Log_OnChecked" x:Name="LogItem" InputGestureText="Ctrl-L" />
            </MenuItem>
            <MenuItem Header="About" Click="About_OnClick"/>
        </Menu>

        <!-- Upper toolbar -->
        <ToolBarTray Grid.Row="1">
            <ToolBarTray.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="LightGray" Offset="1"/>
                    <GradientStop Color="White"/>
                </LinearGradientBrush>
            </ToolBarTray.Background>
            <ToolBar>
                <ToolBar.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFC5C5C5"/>
                        <GradientStop Color="WhiteSmoke" Offset="1"/>
                    </LinearGradientBrush>
                </ToolBar.Background>
                <Button Name="BtnNewFile" Click="BtnNewFile_OnClick">
                    <Image Source="Images/new.png" Width="30" ToolTip="New File (Ctrl-N)"/>
                </Button>
                <Button Name="BtnOpenFile" Click="BtnOpenFile_OnClick">
                    <Image Source="Images/open.png" Width="30" ToolTip="Open (Ctrl-O)" />
                </Button>
                <Button Name="BtnSaveFile" Click="BtnSaveFile_OnClick">
                    <Image Source="Images/save.png" Width="30" ToolTip="Save (Ctrl-S)" />
                </Button>
                <Separator/>
                <Button Name="BtnDelete" Click="BtnDelete_OnClick"
                        IsEnabled="{Binding NetVM.IsSelected}">
                    <Image Width="30" ToolTip="Delete (Del)">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NetVM.IsSelected}" Value="True">
                                        <Setter Property="Source" Value="Images/delete.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NetVM.IsSelected}" Value="False">
                                        <Setter Property="Source" Value="Images/delete_off.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </ToolBar>

            <ToolBar>
                <ToolBar.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFC5C5C5"/>
                        <GradientStop Color="WhiteSmoke" Offset="1"/>
                    </LinearGradientBrush>
                </ToolBar.Background>
                <ToggleButton Name="BtnAddPlace" IsChecked="{Binding NetVM.IsNewPlace, Mode=TwoWay}" >
                    <Image Source="Images/addplace.png" Width="30" ToolTip="Add Place (P)"/>
                </ToggleButton>
                <ToggleButton Name="BtnAddTransition" IsChecked="{Binding NetVM.IsNewTransition, Mode=TwoWay}">
                    <Image Source="Images/addtransition.png" Width="30" ToolTip="Add Transition (T)"/>
                </ToggleButton>

                <Separator/>

                <ToggleButton Name="BtnConnectNode" 
                              IsEnabled="{Binding NetVM.IsSelected}"
                              IsChecked="{Binding NetVM.IsConnectNode, Mode=TwoWay}">
                    <Image Width="30" ToolTip="Connect Nodes (C)">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NetVM.IsSelected}" Value="True">
                                        <Setter Property="Source" Value="Images/addconnection.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NetVM.IsSelected}" Value="False">
                                        <Setter Property="Source" Value="Images/addconnection_off.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>

                <ToggleButton Name="BtnDisconnectNode" 
                              IsEnabled="{Binding NetVM.IsSelected}"
                              IsChecked="{Binding NetVM.IsDisconnectNode, Mode=TwoWay}">
                    <Image Width="30" ToolTip="Disconnect Nodes (Ctrl-C)">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NetVM.IsSelected}" Value="True">
                                        <Setter Property="Source" Value="Images/removeconnection.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NetVM.IsSelected}" Value="False">
                                        <Setter Property="Source" Value="Images/removeconnection_off.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>

                <Separator />

                <Button Name="BtnAddToken" Click="BtnAddToken_OnClick" IsEnabled="{Binding NetVM.IsSelectedPlace}">
                    <Image Width="30" ToolTip="Add Token (F)">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NetVM.IsSelectedPlace}" Value="True">
                                        <Setter Property="Source" Value="Images/addtoken.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NetVM.IsSelectedPlace}" Value="False">
                                        <Setter Property="Source" Value="Images/addtoken_off.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button Name="BtnRemoveToken" Click="BtnRemoveToken_OnClick" IsEnabled="{Binding NetVM.IsSelectedPlace}">
                    <Image Width="30" ToolTip="Remove Token (Ctrl-F)">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NetVM.IsSelectedPlace}" Value="True">
                                        <Setter Property="Source" Value="Images/removetoken.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NetVM.IsSelectedPlace}" Value="False">
                                        <Setter Property="Source" Value="Images/removetoken_off.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button Name="BtnClearMarking" Click="BtnClearMarking_OnClick" ToolTip="Clear Marking (Ctrl-M)">
                    <Image Source="Images/deletemarking.png" Width="30"/>
                </Button>
                <Separator />
                <Button Name="BtnFireTransition" Click="BtnFireTransition_OnClick" IsEnabled="{Binding NetVM.IsSelectedTransition}">
                    <Image Width="30" ToolTip="Fire Transition (H)">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NetVM.IsSelectedTransition}" Value="True">
                                        <Setter Property="Source" Value="Images/firetransition.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NetVM.IsSelectedTransition}" Value="False">
                                        <Setter Property="Source" Value="Images/firetransition_off.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </ToolBar>

        </ToolBarTray>

        <!-- Main control and side panel -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition MaxWidth="250" MinWidth="250"/>
            </Grid.ColumnDefinitions>
            
            <Grid.Resources>
                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

                <CollectionViewSource x:Key="PlaceSource" Source="{Binding NetVM.Places}"/>
                <CollectionViewSource x:Key="TransitionSource" Source="{Binding NetVM.Transitions}"/>
                <CollectionViewSource x:Key="ArcSource" Source="{Binding NetVM.Arcs}"/>

                <!-- Visuals for a place -->
                <DataTemplate DataType="{x:Type viewModels:PlaceViewModel}">
                    <Thumb DragDelta="Thumb_OnDragDelta" >
                        <Thumb.Template>
                            <ControlTemplate>
                                <StackPanel Orientation="Vertical" Cursor="Hand"
                                            MouseDown="Node_OnMouseDown"
                                            MouseRightButtonUp="Node_OnMouseRightButtonUp"
                                            PreviewMouseRightButtonUp="Node_OnPreviewMouseRightButtonUp"
                                            PreviewMouseUp="Node_OnMouseUp">
                                    <Ellipse StrokeThickness="4" x:Name="MyEllipse"
                                                         Width="{Binding Size}" Height="{Binding Size}"  
                                                         Canvas.ZIndex="1">
                                        <Ellipse.Style>
                                            <Style TargetType="{x:Type Ellipse}">
                                                <Setter Property="Fill" Value="White" />
                                                <Setter Property="Stroke" Value="Black" />
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="Black" Opacity="0.5" />
                                                    </Setter.Value>
                                                </Setter>
                                                
                                                <!-- Triggers -->
                                                
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" Opacity="0.5"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding ElementName=Token, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" Opacity="0.5"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                                        <Setter Property="Fill" Value="Yellow" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHighlightedSCC}" Value="true">
                                                        <Setter Property="Stroke" Value="Green"/>
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="LimeGreen" BlurRadius="40" Opacity="0.8"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHighlightedCircuit}" Value="true">
                                                        <Setter Property="Stroke" Value="DarkBlue"/>
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="DodgerBlue" BlurRadius="40" Opacity="0.8"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHighlightedHandle}" Value="true">
                                                        <Setter Property="Stroke" Value="DarkRed"/>
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Red" BlurRadius="40" Opacity="0.8"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                    <Ellipse Fill="Black" Margin="0,-38.5,0,0" x:Name="Token"
                                             Width="15" Height="15" Panel.ZIndex="3" 
                                             Visibility="{Binding IsToken, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <TextBlock HorizontalAlignment="Center" FontSize="14" Margin="0,-30,0,0" 
                                               Foreground="White" Panel.ZIndex="4" FontWeight="Bold"
                                        Text="{Binding Tokens}" Visibility="{Binding IsTokens, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding Name}" 
                                               FontSize="18" FontWeight="Bold" MaxWidth="{Binding Size}"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>

                <!-- Visuals for a transition -->
                <DataTemplate DataType="{x:Type viewModels:TransitionViewModel}">
                    <Thumb DragDelta="Thumb_OnDragDelta">
                        <Thumb.Template>
                            <ControlTemplate>
                                <StackPanel Orientation="Vertical" Cursor="Hand"
                                            MouseDown="Node_OnMouseDown"
                                            MouseRightButtonUp="Node_OnMouseRightButtonUp"
                                            PreviewMouseRightButtonUp="Node_OnPreviewMouseRightButtonUp"
                                            PreviewMouseUp="Node_OnMouseUp">
                                    <Rectangle Width="{Binding Width}" Height="{Binding Size}" 
                                               StrokeThickness="4" Canvas.ZIndex="1">
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="BurlyWood" />
                                                <Setter Property="Stroke" Value="Black"/>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="Black" Opacity="0.5" />
                                                    </Setter.Value>
                                                </Setter>
                                                
                                                <!-- Triggers -->
                                                
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" Opacity="0.5"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                                        <Setter Property="Fill" Value="Yellow" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHighlightedSCC}" Value="true">
                                                        <Setter Property="Stroke" Value="Green"/>
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="LimeGreen" BlurRadius="40" Opacity="0.8"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHighlightedCircuit}" Value="true">
                                                        <Setter Property="Stroke" Value="DarkBlue"/>
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="DodgerBlue" BlurRadius="40" Opacity="0.8"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHighlightedHandle}" Value="true">
                                                        <Setter Property="Stroke" Value="DarkRed"/>
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Red" BlurRadius="40" Opacity="0.8"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding Name}"  
                                               FontSize="18" FontWeight="Bold" MaxWidth="{Binding Size}"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>

                <!-- Visuals for an arc -->
                <DataTemplate DataType="{x:Type viewModels:ArcViewModel}">
                    <Path StrokeThickness="4"
                          Panel.ZIndex="-1">
                        <Path.Data>
                            <GeometryGroup>
                                <LineGeometry 
                                    StartPoint="{Binding SourceBorderPoint}" 
                                    EndPoint="{Binding TargetBorderPoint}" />
                                <LineGeometry 
                                    StartPoint="{Binding TargetBorderPoint}" 
                                    EndPoint="{Binding TargetArrowPoint}">
                                    <LineGeometry.Transform>
                                        <RotateTransform Angle="160"
                                                         CenterX="{Binding TargetBorderPoint.X}"
                                                         CenterY="{Binding TargetBorderPoint.Y}"/>
                                    </LineGeometry.Transform>
                                </LineGeometry>
                                <LineGeometry 
                                    StartPoint="{Binding TargetBorderPoint}" 
                                    EndPoint="{Binding TargetArrowPoint}">
                                    <LineGeometry.Transform>
                                        <RotateTransform Angle="-160"
                                                         CenterX="{Binding TargetBorderPoint.X}"
                                                         CenterY="{Binding TargetBorderPoint.Y}"/>
                                    </LineGeometry.Transform>
                                </LineGeometry>
                            </GeometryGroup>
                        </Path.Data>
                        <Path.Style>
                            <Style TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />

                                <!-- Triggers -->

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHighlightedSCC}" Value="true">
                                        <Setter Property="Stroke" Value="DarkGreen"/>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect Color="LimeGreen" BlurRadius="40" Opacity="0.8"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlightedCircuit}" Value="true">
                                        <Setter Property="Stroke" Value="MidnightBlue"/>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect Color="DodgerBlue" BlurRadius="40" Opacity="0.8"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlightedHandle}" Value="true">
                                        <Setter Property="Stroke" Value="Maroon"/>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect Color="Red" BlurRadius="40" Opacity="0.8"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                
                            </Style>
                        </Path.Style>
                    </Path>
                </DataTemplate>

                <!-- Visuals for the gridlines -->
                <DrawingBrush x:Key="GridTile" Stretch="None" TileMode="Tile"
                              Viewport="0,0 40,40" ViewportUnits="Absolute">
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <LineGeometry StartPoint="0,0" EndPoint="40,0" />
                                    <LineGeometry StartPoint="0,0" EndPoint="0,40" />
                                    <LineGeometry StartPoint="0,40" EndPoint="40,40" />
                                    <LineGeometry StartPoint="40,0" EndPoint="40,40" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                            <GeometryDrawing.Pen>
                                <Pen Thickness="1" Brush="Silver" />
                            </GeometryDrawing.Pen>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Grid.Resources>

            <!-- Main items control -->
            <ItemsControl x:Name="MainControl" IsHitTestVisible="True" Grid.Column="0"
                              PreviewMouseDown="MainControl_PreviewMouseDown" 
                          MouseUp="MainControl_MouseUp">
                <ItemsControl.ItemsSource>
                    <CompositeCollection>
                        <CollectionContainer Collection="{Binding Source={StaticResource ArcSource}}"/>
                        <CollectionContainer Collection="{Binding Source={StaticResource PlaceSource}}"/>
                        <CollectionContainer Collection="{Binding Source={StaticResource TransitionSource}}"/>
                    </CompositeCollection>
                </ItemsControl.ItemsSource>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas SnapsToDevicePixels="True"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Height="Auto" Loaded="Canvas_Loaded"
                                    Width="Auto" IsItemsHost="True">
                            <Canvas.Style>
                                <Style TargetType="Canvas">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsGrid}" Value="True">
                                            <Setter Property="Background" Value="{StaticResource GridTile}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Style>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>


            <GridSplitter Grid.Column="1" Width="5" 
                      VerticalAlignment="Stretch" HorizontalAlignment="Center" Background="#FFD3CACA" />

            <!-- Side panel -->
            <TabControl Grid.Column="2" Background="#FFF0F0F0">

                <!-- Properties tab -->
                <TabItem Header="Properties">
                    <StackPanel>
                        <Expander Header="Node" IsEnabled="{Binding NetVM.IsSelected}"
                          IsExpanded="True" Foreground="Black">
                            <StackPanel Orientation="Vertical">
                                <Label Content="Id" />
                                <TextBox Text="{Binding NetVM.SelectedNode.Node.Id, Mode=OneWay}" IsReadOnly="True"/>
                                <Label Content="Name" />
                                <TextBox Text="{Binding NetVM.SelectedNode.Name, Mode=TwoWay}"/>
                                <Label Content="X" />
                                <TextBox Text="{Binding NetVM.SelectedNode.Center.X}" IsReadOnly="True"/>
                                <Label Content="Y" />
                                <TextBox Text="{Binding NetVM.SelectedNode.Center.Y}" IsReadOnly="True"/>
                            </StackPanel>
                        </Expander>

                    </StackPanel>
                </TabItem>

                <!-- Analysis tab -->
                <TabItem Header="Analysis">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto">
                        <StackPanel HorizontalAlignment="Stretch">

                            <!-- SC Components treeview -->
                            <Expander Header="SC Components" IsEnabled="True"
                          IsExpanded="True">
                                <StackPanel Margin="5" Orientation="Vertical">
                                    <TreeView x:Name="SccTree" MinHeight="50"
                                      GotFocus="AnalysisTree_GetLastActive" SelectedItemChanged="AnalysisTree_GetLastActive"
                                      ItemsSource="{Binding NetVM.StronglyConnectedComponents}">
                                        <TreeView.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type viewModels:ComponentViewModel}" 
                                                              ItemsSource="{Binding Nodes}">
                                                <TextBlock Text="{Binding Name}"  HorizontalAlignment="Stretch" FontWeight="Bold"/>
                                            </HierarchicalDataTemplate>
                                            <DataTemplate DataType="{x:Type viewModels:PlaceViewModel}">
                                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type viewModels:TransitionViewModel}">
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </TreeView.Resources>
                                    </TreeView>
                                </StackPanel>
                            </Expander>

                            <!-- Circuits treeview -->
                            <Expander Header="Elementary Circuits" IsEnabled="True"
                          IsExpanded="True">
                                <StackPanel Margin="5" Orientation="Vertical">
                                    <TreeView x:Name="CircuitsTree" MinHeight="50" 
                                              GotFocus="AnalysisTree_GetLastActive" SelectedItemChanged="AnalysisTree_GetLastActive"
                                      ItemsSource="{Binding NetVM.ElementaryCircuits}">
                                        <TreeView.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type viewModels:CircuitViewModel}" 
                                                              ItemsSource="{Binding Nodes}">
                                                <TextBlock Text="{Binding Name}"  HorizontalAlignment="Stretch" FontWeight="Bold"/>
                                            </HierarchicalDataTemplate>
                                            <DataTemplate DataType="{x:Type viewModels:PlaceViewModel}">
                                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type viewModels:TransitionViewModel}">
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </TreeView.Resources>
                                    </TreeView>
                                </StackPanel>
                            </Expander>

                            <!-- Handles treeview -->
                            <Expander Header="Handles" IsEnabled="True"
                          IsExpanded="True">
                                <StackPanel Margin="5" Orientation="Vertical">
                                    <TreeView x:Name="HandlesTree" MinHeight="50" GotFocus="AnalysisTree_GetLastActive" SelectedItemChanged="AnalysisTree_GetLastActive"
                                      ItemsSource="{Binding NetVM.Handles}">
                                        <TreeView.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type viewModels:HandleViewModel}" 
                                                              ItemsSource="{Binding Nodes}">
                                                <TextBlock Text="{Binding Name}"  HorizontalAlignment="Stretch" FontWeight="Bold"/>
                                            </HierarchicalDataTemplate>
                                            <DataTemplate DataType="{x:Type viewModels:PlaceViewModel}">
                                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type viewModels:TransitionViewModel}">
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </TreeView.Resources>
                                    </TreeView>
                                </StackPanel>
                            </Expander>

                            <!-- Some buttons -->
                            <CheckBox x:Name="BadHandlesCheckBox" Margin="5" Content="Find only PT/TP-handles" IsChecked="True" />
                            <CheckBox x:Name="HighlightCheckBox" Margin="5,0,5,5" Content="Show circuits with handles" IsChecked="True" />

                            <Button Margin="5,5,5,0" Content="Analyze" Click="Analyze_Click"/>
                            <Button Margin="5" Content="Highlight" Click="HighlightSCC_OnClick" IsEnabled="{Binding NetVM.IsAnalyzed}" />
                            <Button Margin="5,15,5,15" Content="Export" Click="ExportAnalysis_OnClick" IsEnabled="{Binding NetVM.IsAnalyzed}" />
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                
            </TabControl>
        </Grid>

        <!-- Status Bar -->
        <StatusBar Grid.Row="3" DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10*"/>

                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>

                            <ColumnDefinition Width="Auto"/>

                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>

                            <ColumnDefinition Width="Auto"/>

                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock x:Name="StatusBlock"  Text="Ready" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="Places:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock Text="{Binding NetVM.Places.Count}" />
            </StatusBarItem>
            <Separator Grid.Column="4"/>
            <StatusBarItem Grid.Column="5">
                <TextBlock Text="Transitions:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="6">
                <TextBlock Text="{Binding NetVM.Transitions.Count}" />
            </StatusBarItem>
            <Separator Grid.Column="7"/>
            <StatusBarItem Grid.Column="8">
                <TextBlock Text="Arcs:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="9">
                <TextBlock Text="{Binding NetVM.Arcs.Count}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>